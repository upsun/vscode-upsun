name: CI (Linux)

on:
  push:
    branches: [main, ci]
  pull_request:
    branches: [main]
  release:
    types:
      - created

env:
  NODE_VERSION: 22.13.0

## Base on https://code.visualstudio.com/api/working-with-extensions/continuous-integration#github-actions

jobs:
  test-unit:
    if: false
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node_version: ${{ env.NODE_VERSION}}

      - name: Run unit tests
        run: npm run test:unit -- --coverage

  test-integration:
    if: false
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    name: Tests Integration
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node_version: ${{ env.NODE_VERSION}}
      - name: Create Folder
        run: mkdir -p out/coverage/.nyc_output
      - name: Run Test Linux
        run: xvfb-run -a npm test
        if: runner.os == 'Linux'
      - name: Run Test Other with UI (MacOS & Windows)
        run: npm test
        if: runner.os != 'Linux'

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node_version: ${{ env.NODE_VERSION}}

      - name: Check dependencies
        run: npm run checkDependencies
        if: false

      - name: Lint TypeScript code
        run: npm run lint

      - name: Check TypeScript format
        run: npm run format-check

  build-vsix:
    name: Create VSIX
    runs-on: ubuntu-latest
    needs: [lint] # test-unit, test-integration,
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node_version: ${{ env.NODE_VERSION}}

      - name: Build VSIX
        run: npx vsce package --out dist/upsun-cli.vsix --pre-release
        shell: bash

      - name: Upload VSIX
        uses: actions/upload-artifact@v4
        with:
          name: upsun-extension
          path: dist
          if-no-files-found: error
          retention-days: 7

  publish-vsix:
    if: success() && startsWith(github.ref, 'refs/tags/')
    name: Publish VSIX
    runs-on: ubuntu-latest
    needs: build-vsix
    steps:
      - name: Publish
        run: npx vsce publish --packagePath dist/*.vsix -p $AZURE_ACCESS_TOKEN
