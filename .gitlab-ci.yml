
# run the pipeline only on MRs, tags, and default branch
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

image: node:16-slim

stages:
  - test
  - package
  - publish

lint:
  stage: test
  script:
    - apt-get update && apt-get install -y git
    - npm ci
    - git checkout . # the npm install automatically fixes package.json formatting issues, but we need the CI to discover them so we revert any changes
    - npm run lint

test-unit:
  stage: test
  when: manual  #TODO : Tempory not test for moment
  script:
    - apt-get update && apt-get install -y git
    - npm ci
    - npm run test:unit -- --coverage
  artifacts:
    when: always
    reports:
      junit:
        - reports/unit.xml

test-integration:
  stage: test
  when: manual  #TODO : Tempory not test for moment
  variables:
    DISPLAY: ':99.0'
  script:
    - apt-get update
    - apt-get install -y xvfb libxtst6 libnss3 libgtk-3-0 libxss1 libasound2 libsecret-1-0 libgbm-dev git
    - npm ci
    - echo $DISPLAY
    - /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - npm run test


.package:
  stage: package
  script:
    - npm ci
    - npm install -g @vscode/vsce
    - "[ -d dist ] || mkdir dist"
    - vsce package -o dist --pre-release
  artifacts:
    paths:
      - 'dist/*.vsix'

package_release:
  extends: .package
  artifacts:
    expire_in: 1 year
  only:
    - tags

package_test:
  extends: .package
  artifacts:
    expire_in: 10 days
  except:
    - tags

# publish_marketplace:
#   stage: publish
#   script:
#     - vsce publish --packagePath dist/*.vsix -p $AZURE_ACCESS_TOKEN
#   when: manual
#   only:
#     - tags
